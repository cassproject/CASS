ARG alpineVersion=3.22
ARG nodeVersion=24
FROM --platform=linux/amd64 node:$nodeVersion-alpine$alpineVersion

RUN apk update && apk upgrade --no-cache

WORKDIR /
ENV OPENSSL_VERSION=3.1.2

RUN apk add --no-cache --virtual .build-deps make gcc libgcc musl-dev linux-headers perl vim \
    && wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
    && tar -xf openssl-${OPENSSL_VERSION}.tar.gz \
    && cd openssl-${OPENSSL_VERSION} \
    && ./Configure --prefix=/usr/local shared enable-fips enable-ec_nistp_64_gcc_128 \
    && make -j8 \
    && make install \
    && make install_ssldirs \
    && make install_fips \
    && apk del .build-deps make gcc libgcc musl-dev linux-headers perl vim \
    && cd .. && rm -rf openssl-${OPENSSL_VERSION}.tar.gz openssl-${OPENSSL_VERSION} \
    && apk upgrade --no-cache -U

RUN echo "nodejs_conf = nodejs_init" >> /etc/ssl/nodejs.cnf && \
echo ".include /usr/local/ssl/fipsmodule.cnf" >> /etc/ssl/nodejs.cnf && \
echo "[nodejs_init]" >> /etc/ssl/nodejs.cnf && \
echo "providers = provider_sect" >> /etc/ssl/nodejs.cnf && \
echo "[provider_sect]" >> /etc/ssl/nodejs.cnf && \
echo "default = default_sect" >> /etc/ssl/nodejs.cnf && \
echo "fips = fips_sect" >> /etc/ssl/nodejs.cnf && \
echo "[default_sect]" >> /etc/ssl/nodejs.cnf && \
echo "activate = 1" >> /etc/ssl/nodejs.cnf

ENV OPENSSL_FIPS=1
ENV OPENSSL_CONF=/etc/ssl/nodejs.cnf
ENV OPENSSL_MODULES=/usr/local/lib64/ossl-modules

RUN openssl version -d -a
RUN node --force-fips -e "console.log('Node.js is running with FIPS:', process.versions.openssl, process.versions.node);"

WORKDIR /app
COPY package.json ./

RUN npm update && \
npm install --production --omit=dev && \
npm upgrade --production --omit=dev --save && \
npm upgrade --global --production --omit=dev && \
npm audit --production --omit=dev --audit-level=high --fix && \
chown root:root node_modules -R

COPY src src
COPY ca.crt cass.crt cass.key copyright.txt ./

EXPOSE 80
ENTRYPOINT [ "node", "--force-fips", "./src/main/server.js" ]